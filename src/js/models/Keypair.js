import * as api from 'ripple-keypairs';

export class Keypair {
  constructor(options = {}) {
    let initialized = false;

    // Default to ed25519
    if (!options.algorithm) {
      options.algorithm = 'ed25519';
    }
    this.algorithm = options.algorithm;

    // entropy
    if (options.entropy) {
      this.seed = api.generateSeed(options.entropy, options.algorithm);
      initialized = true;
    }

    // seed
    // - Could be ed25519 even if it does not start with sEd... (e.g. could be generated by rippled)
    if (options.seed) {
      if (initialized) throw new Error('Cannot specify both entropy and seed');
      this.seed = options.seed;
      initialized = true;
    }

    // privateKey
    // - ed25519 private keys start with ED
    // - secp256k1 private keys start with 00
    if (options.privateKey) {
      if (initialized) throw new Error('Incompatible options specified');
      this.privateKey = options.privateKey;
      initialized = true;
    }

    // publicKey
    // - ed25519 public keys start with ED
    // - secp256k1 public keys do not
    if (options.publicKey) {
      if (initialized) throw new Error('Incompatible options specified');
      this.publicKey = options.publicKey;
      initialized = true;
    }

    if (!initialized) {
      this.seed = api.generateSeed(options);
    }
  }

  keypair() {

  }

  publicKey() {

  }

  privateKey() {

  }

  sign() {

  }

  verify() {

  }

  address() {

  }

  nodeAddress() {

  }
}
